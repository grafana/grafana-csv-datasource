"use strict";(self.webpackChunkgrafana_csv_datasource_docs=self.webpackChunkgrafana_csv_datasource_docs||[]).push([[62],{1565:(a,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>n,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var t=r(5893),s=r(1151);const o={id:"variables",title:"Variables"},n=void 0,i={id:"variables",title:"Variables",description:"Query variables let you extract data from a data source and use it to populate a dashboard variable.",source:"@site/docs/variables.md",sourceDirName:".",slug:"/variables",permalink:"/grafana-csv-datasource/variables",draft:!1,unlisted:!1,editUrl:"https://github.com/grafana/grafana-csv-datasource/edit/main/website/docs/variables.md",tags:[],version:"current",frontMatter:{id:"variables",title:"Variables"},sidebar:"someSidebar",previous:{title:"Query editor",permalink:"/grafana-csv-datasource/query-editor"},next:{title:"Annotations",permalink:"/grafana-csv-datasource/annotations"}},c={},d=[];function l(a){const e=Object.assign({p:"p",a:"a"},(0,s.a)(),a.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:"https://grafana.com/docs/grafana/latest/variables/variable-types/add-query-variable",children:"Query variables"})," let you extract data from a data source and use it to populate a dashboard variable."]}),"\n",(0,t.jsxs)(e.p,{children:["To query the CSV data source for variables, follow the instructions on how to ",(0,t.jsx)(e.a,{href:"https://grafana.com/docs/grafana/latest/variables/variable-types/add-query-variable",children:"Add a query variable"}),". Make sure to select the CSV from the list of data sources."]}),"\n",(0,t.jsxs)(e.p,{children:["For more information on how to configure a query, refer to ",(0,t.jsx)(e.a,{href:"/grafana-csv-datasource/query-editor",children:"Query editor"}),"."]})]})}const u=function(a={}){const{wrapper:e}=Object.assign({},(0,s.a)(),a.components);return e?(0,t.jsx)(e,Object.assign({},a,{children:(0,t.jsx)(l,a)})):l(a)}},1151:(a,e,r)=>{r.d(e,{a:()=>n});var t=r(7294);const s={},o=t.createContext(s);function n(a){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}}}]);